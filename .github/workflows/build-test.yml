name: Build Test

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  test-build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('electron/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Python dependencies
        run: |
          cd python
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
        shell: bash

      - name: Build Python executable
        run: |
          cd python
          python -m PyInstaller main.spec
          echo "" > USE_EXECUTABLE
        shell: bash

      - name: Install Node.js dependencies
        run: |
          cd electron
          npm ci
        shell: bash

      - name: Build for testing (no packaging)
        run: |
          cd electron
          npm run webpack
        shell: bash
        env:
          NODE_ENV: production