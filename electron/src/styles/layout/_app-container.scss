// CSS Grid-based App Layout with Resizable Sidebar (VS Code Architecture)
.app-grid-container {
  display: grid;
  grid-template-columns: 
    56px                                      /* Fixed header */
    minmax(200px, var(--sidebar-width, 15%)) /* Resizable sidebar */
    6px                                       /* Resize handle */
    1fr;                                      /* Main content */
  grid-template-rows: 100vh;
  height: 100vh;
  width: 100%;
  
  grid-template-areas: "header sidebar handle content";
  
  // CSS containment for performance
  contain: layout style;
  
  // Grid area assignments
  .grid-header { grid-area: header; }
  .grid-sidebar { grid-area: sidebar; }
  .grid-sidebar-handle { grid-area: handle; }
  .grid-content { grid-area: content; }
  
  // Header panel styling
  .grid-header {
    background-color: var(--theme-navbar-bg);
    overflow: hidden;
    min-width: 56px;
    max-width: 56px;
  }
  
  // Sidebar panel styling
  .grid-sidebar {
    overflow: hidden;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  // Sidebar resize handle now uses global styles
  .grid-sidebar-handle {
    // All styles are handled by the global resize handle component
    // This class is included in _resize-handles.scss
  }
  
  // Collapsed state - hide sidebar and handle
  &.sidebar-collapsed {
    grid-template-columns: 56px 0 0 1fr;
    
    .grid-sidebar-handle {
      display: none;
    }
  }
  
  // Content panel styling
  .grid-content {
    overflow: hidden;
    display: flex;
    flex-direction: column;
  }
}

// Legacy Layout (for backward compatibility)
.app-container {
  display: flex;
  flex-direction: column;
  height: 100vh;
}

.main-content {
  display: flex;
  flex: 1;
  overflow: hidden;
}

.app-layout-horizontal {
  display: flex;
  width: 100%;
  height: 100%;
  
  .header-panel-fixed {
    width: 56px;
    min-width: 56px;
    max-width: 56px;
    background-color: var(--theme-navbar-bg);
    overflow: hidden;
    flex-shrink: 0;
  }
  
}