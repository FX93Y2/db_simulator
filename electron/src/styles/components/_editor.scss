// CSS Grid-based Editor Layout with Resizable Panels (VS Code Architecture)
.editor-grid-container {
  display: grid;
  grid-template-rows: auto 1fr;
  height: 100vh;
  width: 100%;
  gap: 0;
  
  grid-template-areas:
    "yaml-header handle canvas-header"
    "yaml-content handle canvas-content";
  
  // CSS containment for performance
  contain: layout style;
  
  // Hide CSS Grid debugging lines and drag artifacts
  outline: none !important;
  border: none !important;
  
  // Prevent blue selection highlights during drag
  * {
    outline: none !important;
    -webkit-tap-highlight-color: transparent !important;
    -webkit-touch-callout: none !important;
    -webkit-user-select: none !important;
    -khtml-user-select: none !important;
    -moz-user-select: none !important;
    -ms-user-select: none !important;
    user-select: none !important;
  }
  
  // Allow text selection in editor areas
  .grid-yaml-content,
  .grid-canvas-content {
    * {
      -webkit-user-select: text !important;
      -khtml-user-select: text !important;
      -moz-user-select: text !important;
      -ms-user-select: text !important;
      user-select: text !important;
    }
  }
  
  // Default grid columns (fallback)
  grid-template-columns: 
    minmax(300px, 20%) 
    6px 
    1fr;
}

// Database Configuration Editor specific grid
.db-config-editor .editor-grid-container {
  grid-template-columns: 
    minmax(300px, var(--yaml-panel-width, 20%)) 
    6px 
    1fr;
}

// Simulation Configuration Editor specific grid  
.sim-config-editor .editor-grid-container {
  grid-template-columns: 
    minmax(300px, var(--sim-yaml-panel-width, 20%)) 
    6px 
    1fr;
}

// Grid area assignments (shared for all editor containers)
.editor-grid-container {
  .grid-yaml-header { grid-area: yaml-header; }
  .grid-yaml-content { grid-area: yaml-content; }
  .grid-resize-handle { grid-area: handle; }
  .grid-canvas-header { grid-area: canvas-header; }
  .grid-canvas-content { grid-area: canvas-content; }
  
  // Unified panel styling for grid areas
  .grid-yaml-content,
  .grid-canvas-content {
    overflow: hidden;
    background-color: var(--theme-editor-bg);
    color: var(--theme-text);
    display: flex;
    flex-direction: column;
    
    // GPU acceleration for smooth rendering
    transform: translate3d(0, 0, 0);
    will-change: auto;
  }
  
  // Resizable handle between panels
  .grid-resize-handle {
    background-color: $border-color;
    cursor: col-resize;
    position: relative;
    z-index: 10;
    user-select: none;
    transition: background-color 0.2s ease;
    
    &:hover,
    &.dragging {
      background-color: var(--theme-resize-handle-hover-bg);
    }
    
    // Visual indicator
    &::before {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 1px;
      height: 20px;
      background-color: var(--theme-muted-text);
      opacity: 0.6;
    }
    
    // Hover effect
    &:hover::before {
      opacity: 1;
      background-color: var(--theme-text);
    }
  }
  
  
  // Shared header styling
  .grid-yaml-header,
  .grid-canvas-header {
    padding: 10px 15px;
    font-weight: 600;
    border-bottom: 1px solid $border-color;
    background-color: var(--theme-sidebar-bg);
    height: 46px;
    display: flex;
    align-items: center;
    z-index: 5;
  }
  
  .grid-yaml-header {
    justify-content: flex-end;
    
    .panel-header-actions {
      display: flex;
      gap: 5px;
    }
  }
  
  .grid-canvas-header {
    justify-content: space-between;
    
    // Tab support for canvas header
    &.has-tabs {
      padding: 0 20px;
      position: relative;
      
      .nav-tabs {
        border-bottom: none;
        margin-bottom: 0;
        
        .nav-link {
          border: none;
          border-bottom: 2px solid transparent;
          background: none;
          color: var(--theme-muted-text);
          padding: 12px 16px;
          
          &:hover {
            border-bottom-color: var(--theme-primary);
            color: var(--theme-text);
          }
          
          &.active {
            border-bottom-color: var(--theme-primary);
            color: var(--theme-primary);
            background: none;
          }
        }
      }
      
      .tab-actions {
        position: absolute;
        right: 20px;
        top: 50%;
        transform: translateY(-50%);
      }
    }
  }
}

// Monaco Editor optimizations for CSS Grid
.editor-grid-container {
  .yaml-editor {
    height: 100%;
    display: flex;
    flex-direction: column;
    
    .monaco-editor-container {
      flex: 1;
      width: 100%;
      height: 100%;
      background-color: var(--theme-editor-bg);
      border: none !important;
      overflow: hidden;
      
      // Critical: Let CSS Grid handle sizing, not Monaco
      .monaco-editor {
        width: 100% !important;
        height: 100% !important;
      }
    }
  }
  
  // Canvas content optimization
  .canvas-content {
    height: 100%;
    width: 100%;
    overflow: hidden;
    background: transparent;
    display: flex;
    flex-direction: column;
    
    .er-diagram-container,
    .event-flow-container {
      flex: 1;
      width: 100%;
      height: 100%;
      position: relative;
      border: none;
      overflow: hidden;
      
      .react-flow {
        width: 100%;
        height: 100%;
      }
      
      .react-flow__container,
      .react-flow__renderer {
        height: 100%;
        width: 100%;
      }
      
      .react-flow__controls {
        box-shadow: 0 0 2px 1px rgba(0, 0, 0, 0.1);
      }
    }
  }
}

