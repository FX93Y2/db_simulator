// Form Styles
.config-form {
  &__group {
    margin-bottom: 20px;
  }
  
  &__actions {
    display: flex;
    justify-content: flex-end;
    gap: 10px;
    margin-top: 30px;
  }
}

// Attribute Editor Drag and Drop Styles
.attribute-editor-card {
  transition: all 0.2s ease;
  
  &.dragging {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    transform: scale(1.02);
  }
  
  .attribute-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    
    &-left {
      display: flex;
      align-items: center;
      gap: 8px;
    }
  }
  
  .drag-handle {
    cursor: grab;
    padding: 4px;
    border-radius: 4px;
    color: var(--bs-secondary);
    transition: all 0.2s ease;
    
    &:hover {
      color: var(--bs-primary);
      background-color: var(--bs-light);
    }
    
    &:active {
      cursor: grabbing;
    }
  }
  
  .attribute-name {
    font-weight: 500;
    color: var(--bs-dark);
  }
}

// Dark theme support for attribute editor
[data-bs-theme="dark"] {
  .attribute-editor-card {
    .attribute-name {
      color: var(--bs-light);
    }
    
    .drag-handle:hover {
      background-color: var(--bs-dark);
    }
  }
}

// Attribute Grid Styles (CSS Grid Layout)
// Attribute-specific cell styles moved to _data-table.scss

// Step Editor Grid Styles (for NodeEditModal components)
.step-editor-grid-container {
  border: 1px solid var(--theme-border);
  border-radius: 8px;
  overflow: visible;
  background-color: var(--theme-editor-bg);
  margin-bottom: 1rem;
  
  &:last-child {
    margin-bottom: 0;
  }
}

.step-editor-grid-header {
  display: grid;
  gap: 0;
  background-color: var(--theme-table-header-bg);
  filter: brightness(0.9); // Make slightly darker than modal body
  border-bottom: 2px solid var(--theme-border);
  
  .grid-header-cell {
    padding: 8px 12px;
    font-weight: 600;
    color: var(--theme-text);
    font-size: 0.875rem;
    display: flex;
    align-items: center;
  }
  
  // Decision outcomes grid (probability mode)
  &.decide-probability {
    grid-template-columns: 1fr 120px 60px;
  }
  
  // Decision outcomes grid (condition mode)
  &.decide-condition {
    grid-template-columns: 1fr 2fr 60px;
  }
  
  // Assignment attributes grid
  &.assign-attributes {
    grid-template-columns: 150px 1.5fr 1fr 50px;
  }
  
  // Resource requirements grid
  &.resource-requirements {
    grid-template-columns: 1fr 1fr 120px 60px;
  }
}

.step-editor-grid-row {
  display: grid;
  gap: 0;
  transition: all 0.2s ease;
  border-bottom: 1px solid var(--theme-border);
  background-color: var(--theme-editor-bg);
  color: var(--theme-text);
  
  &:hover {
    background-color: var(--theme-hover-bg);
  }
  
  &:last-child {
    border-bottom: none;
  }
  
  .grid-cell {
    padding: 8px 12px;
    display: flex;
    align-items: center;
    min-height: 44px;
    position: relative;
    
    &.cell-center {
      justify-content: center;
    }
    
    &.cell-end {
      justify-content: flex-end;
    }
    
    // Fix dropdown width and positioning
    .input-group .dropdown-toggle {
      min-width: 40px;
      border-left: 1px solid var(--bs-border-color);
    }
    
    .dropdown-menu {
      z-index: 1050;
      min-width: 100%;
    }
  }
  
  // Decision outcomes grid (probability mode)
  &.decide-probability {
    grid-template-columns: 1fr 120px 60px;
  }
  
  // Decision outcomes grid (condition mode)  
  &.decide-condition {
    grid-template-columns: 1fr 2fr 60px;
    
    .condition-fields {
      display: grid;
      grid-template-columns: 1fr 1fr 1fr 1fr;
      gap: 8px;
      width: 100%;
    }
  }
  
  // Assignment attributes grid
  &.assign-attributes {
    grid-template-columns: 150px 1.5fr 1fr 50px;
  }
  
  // Resource requirements grid
  &.resource-requirements {
    grid-template-columns: 1fr 1fr 120px 60px;
  }
}

// Step editor specific components styling
.step-editor-section {
  margin-bottom: 1.5rem;
  
  .section-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
    
    h6 {
      margin: 0;
      font-weight: 600;
      color: var(--theme-text);
    }
  }
}

// Add step item button (matches AttributeTable styling)
.add-step-item-btn {
  border: 2px dashed var(--theme-border) !important;
  background: transparent !important;
  padding: 8px 16px;
  transition: all 0.2s ease;
  color: var(--theme-text) !important;
  
  &:hover {
    border-color: var(--theme-primary) !important;
    background-color: var(--theme-hover-bg) !important;
    color: var(--theme-primary) !important;
  }
  
  &:focus {
    box-shadow: 0 0 0 0.2rem rgba(var(--bs-primary-rgb), 0.25);
    border-color: var(--theme-primary) !important;
    background-color: var(--theme-hover-bg) !important;
    color: var(--theme-primary) !important;
  }
}

// Step Editor Modal Styles (allow Bootstrap size classes to work)
.step-editor-modal {
  // Only override large modals to be extra wide for tables
  &.modal-lg .modal-dialog {
    max-width: 960px;
    width: 90vw;
  }
  
  // Let Bootstrap handle default and medium sizes normally
  // Default: ~500px, Medium: ~800px, Large: custom 960px above
  
  .modal-content {
    background-color: var(--theme-modal-bg);
  }
  
  .modal-header {
    background-color: var(--theme-modal-header-bg);
    border-bottom: none;
  }
  
  .modal-body {
    padding: 1.5rem;
    background-color: var(--theme-modal-bg);
  }
  
  .modal-footer {
    background-color: var(--theme-modal-bg);
    border-top: none;
  }
}

// Note: Dark theme support is now handled automatically through 
// the app's --theme-* variables defined in _themes.scss

// ============================================
// STEP EDITOR SECTION STYLES
// ============================================
// Shared styles for step editor info sections (matching entity editor style)

.step-info-section {
  background-color: var(--theme-editor-bg);
  border: none;
  border-radius: 0.375rem;
  padding: 1rem;
  margin-bottom: 1rem;
  
  .section-title {
    color: var(--theme-text);
    font-weight: 600;
    font-size: 1rem;
    margin-bottom: 1rem;
  }
}

// ============================================
// CONSOLIDATED FORM STYLES
// ============================================
// Unified form control styling across all components
// These styles apply globally to ensure consistency

.form-label {
  font-weight: 500;
  color: var(--theme-text);
  margin-bottom: 0.5rem;
  
  svg {
    color: var(--theme-primary);
  }
}

.form-control, 
.form-select {
  background-color: var(--theme-input-bg);
  border-color: var(--theme-input-border);
  color: var(--theme-text);
  transition: border-color 0.15s ease-in-out;
  
  &:hover:not(:focus):not(:disabled):not([readonly]) {
    border-color: var(--theme-input-focus-border);
  }
  
  // Ensure hover works with Bootstrap utility classes (like .pe-5)
  &.pe-5:hover:not(:focus):not(:disabled):not([readonly]),
  &[class*="pe-"]:hover:not(:focus):not(:disabled):not([readonly]) {
    border-color: var(--theme-input-focus-border) !important;
  }
  
  &:focus {
    background-color: var(--theme-input-bg);
    border-color: var(--theme-input-focus-border);
    color: var(--theme-text);
    box-shadow: 0 0 0 0.2rem rgba(var(--theme-primary-rgb), 0.25);
  }
  
  &::placeholder {
    color: var(--theme-muted-text);
  }
  
  &.is-invalid {
    border-color: var(--bs-danger, #dc3545);
  }
  
  &:disabled,
  &[readonly],
  &.form-control-readonly {
    background-color: var(--theme-table-header-bg);
    border-color: var(--theme-input-border);
    color: var(--theme-muted-text);
    opacity: 0.8;
    cursor: not-allowed;
  }
}

// Textarea specific styling
textarea.form-control {
  resize: vertical;
  min-height: 60px;
}

.form-text {
  color: var(--theme-muted-text);
  font-size: 0.875rem;
}

.input-group-text {
  background-color: var(--theme-editor-bg);
  border-color: var(--theme-border);
  color: var(--theme-text);
}

// Alert styles within forms
.alert {
  background-color: var(--theme-card-bg);
  border-color: var(--theme-border);
  color: var(--theme-text);
  
  &.alert-danger {
    background-color: rgba(220, 53, 69, 0.1);
    border-color: rgba(220, 53, 69, 0.3);
    color: var(--bs-danger, #dc3545);
  }
  
  &.alert-info {
    background-color: rgba(13, 202, 240, 0.1);
    border-color: rgba(13, 202, 240, 0.3);
    color: var(--bs-info, #0dcaf0);
  }
}

// ============================================
// TYPE SELECTOR COMPONENT STYLES
// ============================================
// Integrated single-input design that matches other form controls

.type-selector {
  position: relative;
  width: 100%;
  
  // Main input container - looks like a single form control
  .type-selector-input {
    background-color: var(--theme-input-bg);
    border: 1px solid var(--theme-input-border);
    border-radius: 0.375rem;
    color: var(--theme-text);
    display: flex;
    align-items: center;
    padding: 0.375rem 0.75rem; // Default form-control padding
    transition: border-color 0.15s ease-in-out;
    min-height: 38px; // Match form-control height
    
    &:hover {
      border-color: var(--theme-input-focus-border);
    }
    
    &:focus-within {
      border-color: var(--theme-input-focus-border);
      outline: none;
      box-shadow: 0 0 0 0.2rem rgba(var(--theme-primary-rgb), 0.25);
    }
    
    // Small size variant
    &.type-selector-input-sm {
      padding: 0.25rem 0.5rem;
      min-height: 31px; // Match sm form-control height
      border-radius: 0.25rem;
    }
  }
  
  // Icon buttons within the input
  .type-selector-icon-btn {
    background: transparent;
    border: none;
    color: var(--theme-muted-text);
    padding: 0.25rem;
    border-radius: 0.25rem;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
    min-width: 20px;
    height: 20px;
    
    &:hover {
      background-color: var(--theme-hover-bg);
      color: var(--theme-primary);
    }
    
    &:focus {
      outline: none;
      background-color: var(--theme-hover-bg);
      color: var(--theme-primary);
    }
    
    &:active {
      background-color: var(--theme-active-bg);
    }
  }
  
  // Type display text
  .type-selector-value {
    flex: 1;
    margin: 0 0.5rem;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    color: var(--theme-text);
    font-size: 0.875rem;
  }
  
  // Chevron rotation animation
  .chevron {
    transition: transform 0.2s ease;
    
    &.chevron-up {
      transform: rotate(180deg);
    }
  }
  
  // Dropdown menu styling - high z-index to escape modal
  .type-selector-menu {
    position: fixed;
    margin-top: 2px;
    background-color: var(--theme-card-bg);
    border: 1px solid var(--theme-border);
    border-radius: 0.375rem;
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
    max-height: 250px;
    overflow-y: auto;
    z-index: 9999; // Much higher than modal z-index (1055)
    min-width: 200px;
    
    // Ensure proper scrolling behavior
    overscroll-behavior: contain;
    
    // Dropdown headers (category labels)
    .dropdown-header {
      font-weight: 600;
      font-size: 0.875rem;
      color: var(--theme-muted-text);
      padding: 0.5rem 1rem 0.25rem;
      background-color: transparent;
    }
    
    // Dropdown items (now buttons)
    .dropdown-item {
      width: 100%;
      padding: 0.375rem 1rem;
      font-size: 0.875rem;
      color: var(--theme-text);
      background-color: transparent;
      border: none;
      text-align: left;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      transition: all 0.15s ease;
      cursor: pointer;
      
      &:hover {
        background-color: var(--theme-hover-bg);
        color: var(--theme-text);
      }
      
      &:active,
      &.active {
        background-color: var(--theme-primary);
        color: white;
      }
      
      &:focus {
        outline: none;
        background-color: var(--theme-hover-bg);
        color: var(--theme-text);
      }
      
      // Special styling for "Custom Type..." option
      &.text-primary {
        color: var(--theme-primary) !important;
        font-weight: 500;
        
        &:hover {
          background-color: var(--theme-primary);
          color: white !important;
        }
      }
    }
    
    // Dropdown dividers
    .dropdown-divider {
      height: 1px;
      margin: 0.25rem 0;
      background-color: var(--theme-border);
      border: none;
    }
  }
  
  // Editing mode styles - now integrated within the input container
  &.type-selector-editing {
    .type-selector-edit-field {
      flex: 1;
      min-width: 0; // Allow input to shrink when buttons are present
      background: transparent;
      border: none;
      color: var(--theme-text);
      font-size: 0.875rem;
      margin: 0 0.25rem;
      outline: none;
      padding: 0; // Remove any default input padding
      
      &::placeholder {
        color: var(--theme-muted-text);
        opacity: 0.7;
      }
      
      &:focus {
        outline: none;
      }
    }
    
    // Save and Cancel buttons - ensure visibility
    .type-selector-save-icon,
    .type-selector-cancel-icon {
      flex-shrink: 0; // Prevent them from being squeezed out
      min-width: 24px;
      height: 24px;
      margin-left: 0.25rem;
      background: transparent;
      border: 1px solid transparent;
      color: var(--theme-muted-text);
      
      &:hover {
        background-color: var(--theme-hover-bg);
        color: var(--theme-primary);
        border-color: var(--theme-border);
      }
      
      &:focus {
        outline: none;
        background-color: var(--theme-hover-bg);
        color: var(--theme-primary);
        border-color: var(--theme-input-focus-border);
      }
    }
  }
}

// Dark theme specific overrides
body.theme-dark {
  .type-selector {
    .type-selector-menu {
      box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.3);
    }
  }
}

// Ensure dropdown doesn't get cut off in table cells
.data-grid-row .grid-cell {
  overflow: visible !important;
  position: relative !important;
}

// ============================================
// FORMULA EXPRESSION BUTTON STYLES
// ============================================
// Button that mimics Form.Select appearance for SQL editor trigger

.formula-expression-button {
  // Base styling to match Form.Select
  background-color: var(--theme-input-bg) !important;
  border: 1px solid var(--theme-input-border) !important;
  color: var(--theme-text) !important;
  transition: border-color 0.15s ease-in-out !important;
  
  // Match Form.Select padding and sizing
  padding: 0.375rem 0.75rem !important;
  border-radius: 0.375rem !important;
  
  // Small size variant
  &.btn-sm {
    padding: 0.25rem 0.5rem !important;
    border-radius: 0.25rem !important;
  }
  
  // Hover state to match Form.Select
  &:hover:not(:focus):not(:disabled) {
    border-color: var(--theme-input-focus-border) !important;
    background-color: var(--theme-input-bg) !important;
    color: var(--theme-text) !important;
  }
  
  // Focus state to match Form.Select
  &:focus {
    background-color: var(--theme-input-bg) !important;
    border-color: var(--theme-input-focus-border) !important;
    color: var(--theme-text) !important;
    box-shadow: 0 0 0 0.2rem rgba(var(--theme-primary-rgb), 0.25) !important;
    outline: none !important;
  }
  
  // Active state
  &:active,
  &.active {
    background-color: var(--theme-input-bg) !important;
    border-color: var(--theme-input-focus-border) !important;
    color: var(--theme-text) !important;
    box-shadow: 0 0 0 0.2rem rgba(var(--theme-primary-rgb), 0.25) !important;
  }
  
  // Disabled state
  &:disabled {
    background-color: var(--theme-table-header-bg) !important;
    border-color: var(--theme-input-border) !important;
    color: var(--theme-muted-text) !important;
    opacity: 0.8 !important;
    cursor: not-allowed !important;
  }
  
  // Text content styling
  .text-truncate {
    color: inherit !important;
  }

  // Placeholder state styling
  &.is-placeholder .text-truncate {
    font-style: italic;
    opacity: 0.8;
  }
  
  // Icon styling
  svg {
    color: var(--theme-muted-text) !important;
    flex-shrink: 0 !important;
  }
  
  // Check icon when expression exists
  .ms-auto svg {
    color: var(--bs-success, #198754) !important;
  }
}
