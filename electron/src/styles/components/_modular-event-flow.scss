/* Modular Event Flow Styles - SVG-Based Minimalist Design */
@import 'text-selection-prevention';

.modular-event-flow {
  height: 100%;
  width: 100%;
  @include prevent-text-selection;
  position: relative;
  
  // Drag over feedback
  &.drag-over {
    &::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(var(--theme-primary-rgb), 0.05);
      border: 2px dashed var(--theme-primary);
      pointer-events: none;
      z-index: 1000;
      animation: pulse 1.5s infinite;
    }
  }
  
  // Node colors using theme system (light theme defaults)
  --flow-node-bg: var(--theme-card-bg);           // White background
  --flow-node-outline: var(--theme-text);         // Black outline
  --flow-node-text: var(--theme-text);            // Black text
  --flow-node-icon: var(--theme-text-muted);      // Gray for icons
  --flow-node-shadow: rgba(0, 0, 0, 0.1);         // Light shadow
  --flow-node-hover-shadow: rgba(0, 0, 0, 0.15);  // Hover shadow
  --theme-tooltip-bg: #333;                       // Tooltip background
  --theme-tooltip-text: white;                    // Tooltip text
}

// Dark theme overrides using existing theme variables
.dark-theme .modular-event-flow {
  --flow-node-bg: var(--theme-er-node-bg);        // Use same as ER nodes
  --flow-node-outline: var(--theme-text-muted);   // Lighter outline
  --flow-node-text: var(--theme-text);            // White text
  --flow-node-icon: var(--theme-text-muted);      // Muted for icons
  --flow-node-shadow: rgba(0, 0, 0, 0.3);         // Darker shadow
  --flow-node-hover-shadow: rgba(0, 0, 0, 0.4);   // Darker hover shadow
  --theme-tooltip-bg: #555;                       // Darker tooltip
  --theme-tooltip-text: white;                    // White tooltip text
}

/* Override ReactFlow default node styling */
.modular-event-flow .react-flow__node {
  background: transparent !important;
  border: none !important;
  padding: 0 !important;
  box-shadow: none !important;
}

/* Override theme-level ReactFlow node styling with higher specificity */
.dark-theme .modular-event-flow .react-flow__node,
.modular-event-flow .react-flow__node {
  background-color: transparent !important;
  border: none !important;
  box-shadow: none !important;
}

.modular-event-flow .react-flow__node-default {
  background: transparent !important;
  border: none !important;
  padding: 0 !important;
  box-shadow: none !important;
}

/* Common node styling */
.custom-node {
  background: transparent !important;
  border: none !important;
  padding: 0 !important;
  box-shadow: none !important;
  @include prevent-text-selection;
  cursor: pointer;
}

/* SVG node styling with theme color overrides */
.node-svg {
  width: 100%;
  height: 100%;
  
  // Override SVG fill with theme colors (no stroke for clean look)
  path, rect, ellipse {
    fill: var(--flow-node-bg) !important;
    stroke: none !important;
  }
  
  // Extra specificity for transparent fills
  ellipse[fill="transparent"] {
    fill: var(--flow-node-bg) !important;
  }
  
  // Handle shadow effects
  filter: drop-shadow(0 1px 3px var(--flow-node-shadow));
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Content overlay for text/icons positioned on top of SVG */
.node-content-overlay {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  pointer-events: none; // Allow clicking through to SVG for dragging
  z-index: 2;
}

/* Node text styling */
.node-label {
  font-size: 14px;
  font-weight: 600;
  color: var(--flow-node-text);
  text-align: center;
  line-height: 1.2;
  max-width: 100px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* Node icon styling */
.node-icon {
  color: var(--flow-node-icon);
  stroke-width: 2;
  flex-shrink: 0;
}

/* Create Node (Circle with +) */
.create-step-node {
  width: 80px;
  height: 80px;
  position: relative;
}

.create-shape {
  width: 100%;
  height: 100%;
  position: relative;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  
  &:hover .node-svg {
    transform: scale(1.02);
    filter: drop-shadow(0 4px 6px var(--flow-node-hover-shadow));
  }
}

/* Release Node (Circle with -) */
.release-step-node {
  width: 80px;
  height: 80px;
  position: relative;
}

.release-shape {
  width: 100%;
  height: 100%;
  position: relative;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  
  &:hover .node-svg {
    transform: scale(1.02);
    filter: drop-shadow(0 4px 6px var(--flow-node-hover-shadow));
  }
}

/* Process/Event Node (Rectangle) */
.process-step-node {
  width: 130px;
  height: 90px;
  position: relative;
}

.process-shape {
  width: 100%;
  height: 100%;
  position: relative;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  
  &:hover .node-svg {
    transform: scale(1.02);
    filter: drop-shadow(0 4px 6px var(--flow-node-hover-shadow));
  }
}

/* Decide Node (Diamond) */
.decide-step-node {
  background: transparent !important;
  border: none !important;
  padding: 0 !important;
  margin: 0 !important;
  width: 110px;
  min-height: 80px;
  position: relative;
  box-shadow: none !important;
  @include prevent-text-selection;
}

.decide-shape {
  width: 100%;
  height: 80px;
  position: relative;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  
  &:hover .node-svg {
    transform: scale(1.02);
    filter: drop-shadow(0 4px 6px var(--flow-node-hover-shadow));
  }
}

/* Assign Node (Pentagon) */
.assign-step-node {
  width: 120px;
  height: 80px;
  position: relative;
}

.assign-shape {
  width: 100%;
  height: 100%;
  position: relative;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  
  &:hover .node-svg {
    transform: scale(1.02);
    filter: drop-shadow(0 4px 6px var(--flow-node-hover-shadow));
  }
}

/* Selection States */
.custom-node.selected .node-svg {
  path, rect, ellipse {
    stroke-width: 3px !important;
    stroke: var(--theme-primary) !important;
  }
  
  filter: drop-shadow(0 0 6px rgba(66, 153, 225, 0.4)) drop-shadow(0 4px 8px var(--flow-node-hover-shadow));
}

/* React Flow Handle Styles */
.modular-event-flow .react-flow__handle {
  width: 8px;
  height: 8px;
  background: var(--flow-node-outline);
  border: 1px solid var(--flow-node-bg);
  border-radius: 50%;
  
  &:hover {
    background: var(--theme-primary);
    transform: scale(1.3);
  }
}

/* Decide node handle positioning and colors */
.decide-step-node .react-flow__handle {
  background: var(--flow-node-outline);
  border: 1px solid var(--flow-node-bg);
}

.decide-step-node .outcome-handle {
  transition: all 0.2s ease;
}

.decide-step-node .new-outcome-handle {
  background: var(--flow-node-outline);
  border: 2px dashed var(--flow-node-bg);
  opacity: 0.7;
  
  &:hover {
    opacity: 1;
    transform: scale(1.3);
  }
}

/* Edge Styles */
.modular-event-flow .react-flow__edge {
  stroke: var(--flow-node-outline);
  stroke-width: 1.5;
  
  &.react-flow__edge-smoothstep {
    stroke-width: 1.5;
  }
}

.modular-event-flow .react-flow__edge-text {
  font-size: 12px;
  font-weight: 500;
  fill: var(--flow-node-text);
  background: var(--flow-node-bg);
  padding: 2px 6px;
  border-radius: 4px;
  border: 1px solid var(--flow-node-outline);
}

/* Node Selection Animation */
.modular-event-flow .react-flow__node.selected {
  .node-svg {
    animation: nodeSelection 0.3s ease-out;
  }
}

@keyframes nodeSelection {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

/* Node Dragging States */
.modular-event-flow .react-flow__node.dragging {
  opacity: 0.8;
  
  .node-svg {
    transform: scale(1.02);
  }
}

/* Custom tooltip styling removed - using system tooltips only */

/* Controls Styling */
.modular-event-flow .react-flow__controls {
  background: var(--flow-node-bg);
  border: 1px solid var(--flow-node-outline);
  border-radius: 6px;
  box-shadow: 0 2px 4px var(--flow-node-shadow);
  
  button {
    background: var(--flow-node-bg);
    border: none;
    color: var(--flow-node-text);
    
    &:hover {
      background: var(--theme-hover-bg);
    }
    
    &:disabled {
      opacity: 0.5;
    }
  }
}

.modular-event-flow .react-flow__minimap {
  background: var(--flow-node-bg);
  border: 1px solid var(--flow-node-outline);
  border-radius: 6px;
}

/* Responsive Design */
@media (max-width: 768px) {
  .create-step-node,
  .release-step-node {
    width: 70px;
    height: 70px;
    
    .node-icon {
      size: 20px;
    }
  }
  
  .process-step-node {
    width: 110px;
    height: 70px;
  }
  
  .decide-step-node {
    width: 90px;
    height: 70px;
  }
  
  .assign-step-node {
    width: 100px;
    height: 70px;
  }
  
  .node-label {
    font-size: 12px;
    max-width: 80px;
  }
}

// Pulse animation for drag over feedback
@keyframes pulse {
  0% {
    opacity: 0.3;
  }
  50% {
    opacity: 0.5;
  }
  100% {
    opacity: 0.3;
  }
}

// Drag preview styles
.module-drag-preview {
  opacity: 0.7;
  filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.2));
  pointer-events: none;
  
  svg {
    width: 100%;
    height: 100%;
  }
}